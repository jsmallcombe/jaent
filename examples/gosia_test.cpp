
//
//
// James's not Geant4 : jaent V1.3.1
// james.smallcombe@outlook.com 01/4/2015
//
//

#include <TApplication.h>
#include <TH1.h>
#include <TH2.h>
#include <TCanvas.h>
#include <TProfile2D.h>
#include <TPaveText.h>
#include <TMacro.h>
#include <TGraph.h>
#include <TBrowser.h>

#include <iostream>
#include <iomanip> 
#include <fstream>
#include <string>
#include <sstream>
#include <stdio.h>
#include <stdlib.h>


#include "exp_core.h"
#include "detector_class.h"
#include "auto_setup.h"
using namespace std;

//Unused historic data from astar
TGraph P_range();
TGraph P_energy();

int main(int argc, char *argv[]){	
// int argcb;
// char **argvb;	
TApplication *app = new TApplication("app", &argc, argv);
TH1::AddDirectory(kFALSE);//avoid name overwrites but could cause other memory histogram issues
//        h->SetDirectory(0);          for the current histogram h


	gStyle->SetOptStat(0);
	exp_core expr(80.0);
	
	
vector<vector<int>> BadPix={{19,0},{19,1},{19,2},{19,3},{19,4},{19,5},{19,6},{19,7},{19,8},{19,9},{19,10},{19,11},{19,12},{19,13},{19,14},{19,15},{19,16},{19,17},{19,18},{19,19},{19,20},{19,21},{19,22},{19,23},{19,24},{19,25},{19,26},{19,27},{19,28},{19,29},{19,30},{19,31},{18,0},{18,1},{18,2},{18,3},{18,4},{18,5},{18,6},{18,7},{18,8},{18,9},{18,10},{18,11},{18,12},{18,13},{18,14},{18,15},{18,16},{18,17},{18,18},{18,19},{18,20},{18,21},{18,22},{18,23},{18,24},{18,25},{18,26},{18,27},{18,28},{18,29},{18,30},{18,31},{17,2},{17,3},{17,4},{17,5},{17,6},{17,7},{17,8},{17,9},{17,10},{17,11},{17,12},{17,13},{17,14},{17,15},{17,16},{17,17},{17,18},{17,19},{17,20},{17,21},{17,22},{17,23},{17,24},{17,25},{17,26},{17,27},{17,28},{17,29},{16,4},{16,5},{16,6},{16,7},{16,8},{16,9},{16,10},{16,11},{16,12},{16,13},{16,14},{16,15},{16,16},{16,17},{16,18},{16,19},{16,20},{16,21},{16,22},{16,23},{16,24},{16,25},{16,26},{16,27},{15,5},{15,6},{15,7},{15,8},{15,9},{15,10},{15,11},{15,12},{15,13},{15,14},{15,15},{15,16},{15,17},{15,18},{15,19},{15,20},{15,21},{15,22},{15,23},{15,24},{14,8},{14,9},{14,10},{14,11},{14,12},{14,13},{14,14},{14,15},{14,16},{14,17},{14,18},{14,19},{14,20},{14,21},{14,22},{13,11},{13,12},{13,13},{13,14},{13,15},{13,16},{13,17},{13,18},{13,19},{0,6},{1,6},{2,6},{3,6},{4,6},{5,6},{6,6},{7,6},{8,6},{9,6},{10,6},{11,6},{12,6},{13,6},{14,6},{15,6},{16,6},{17,6},{18,6},{19,6},{20,0},{20,1},{20,2},{20,3},{20,4},{20,5},{20,6},{20,7},{20,8},{20,9},{20,10},{20,11},{20,12},{20,13},{20,14},{20,15},{20,16},{20,17},{20,18},{20,19},{20,20},{20,21},{20,22},{20,23},{20,24},{20,25},{20,26},{20,27},{20,28},{20,29},{20,30},{20,31},{21,0},{21,1},{21,2},{21,3},{21,4},{21,5},{21,6},{21,7},{21,8},{21,9},{21,10},{21,11},{21,12},{21,13},{21,14},{21,15},{21,16},{21,17},{21,18},{21,19},{21,20},{21,21},{21,22},{21,23},{21,24},{21,25},{21,26},{21,27},{21,28},{21,29},{21,30},{21,31},{22,0},{22,1},{22,2},{22,3},{22,4},{22,5},{22,6},{22,7},{22,8},{22,9},{22,10},{22,11},{22,12},{22,13},{22,14},{22,15},{22,16},{22,17},{22,18},{22,19},{22,20},{22,21},{22,22},{22,23},{22,24},{22,25},{22,26},{22,27},{22,28},{22,29},{22,30},{22,31},{23,0},{23,1},{23,2},{23,3},{23,4},{23,5},{23,6},{23,7},{23,8},{23,9},{23,10},{23,11},{23,12},{23,13},{23,14},{23,15},{23,16},{23,17},{23,18},{23,19},{23,20},{23,21},{23,22},{23,23},{23,24},{23,25},{23,26},{23,27},{23,28},{23,29},{23,30},{23,31}};		


	TRotation rot;
	rot.RotateZ(21.5*pi/180.);
	
// 	expr.set_beam(36,78,429.0);
	expr.set_beam(36,78,296.4);
// 	expr.set_targ(target(79,197,1.9));
	expr.set_targ(target(46,110,1.6));	
	AddS3BadPix(expr,TVector3(-0.323,-0.946,28.35),rot,0,23,BadPix,8);
// 	AddS3BadPix(expr,TVector3(-0.323,-0.946,28.35),rot,0,5,BadPix,8);
// 	AddS3BadPix(expr,TVector3(-0.323,-0.946,28.35),rot,6,10,BadPix,8);
// 	AddS3BadPix(expr,TVector3(-0.323,-0.946,28.35),rot,11,19,BadPix,8);
	
	
// 	vector<vector<int>> BadPix={{5,0},{5,1},{5,2},{5,3},{5,4},{5,20},{5,21},{5,22},{9,23},{10,8},{15,26},{0,23},{1,23},{2,23},{3,23},{4,23},{5,23},{0,24},{1,24},{2,24},{3,24},{4,24},{5,24},{0,25},{1,25},{2,25},{3,25},{4,25},{5,25},{6,9},{6,10},{6,11},{6,12},{6,13},{6,14},{6,15},{5,5},{5,6},{4,0},{4,1},{5,19},{5,26},{5,27},{5,28},{5,29},{5,30},{5,31},{4,26},{4,27},{4,28},{4,29},{4,30},{4,31},{4,2}};		

// 	expr.set_beam(68,156,600.0);
// 	expr.set_targ(target(28,58,1.5));
// 	AddGapS3Rings(expr,TVector3(0.70,1.0,32.0),rot,0,23,19,21);
// 	AddS3BadPix(expr,TVector3(0.70,1.0,32.0),rot,0,5,BadPix,-4);
// 	AddGapS3Rings(expr,TVector3(-0.2,1.52,20.0),rot,0,23,5,5);

	
	expr.set_target_interaction(2);	
	expr.BuildOPINTI(-5,10);
//  add_square(expr,TVector3(20,0,30),TRotation(),25.);
// 	new TCanvas("can_view", "can_view", 800, 800);
// 	expr.set_target_primary_offset(-4,0,-15);
// 	expr.draw_hits_3D(0,1,false,0.8,1,0);
	
	TCanvas * can_view = new TCanvas("can_view", "can_view", 1200, 600);
	
// 	can_view->Divide(2,1);
// 	can_view->cd(1);
	expr.draw_phi(true);
// 	can_view->cd(2);
// 	expr.draw_exp();	
	expr.ReadDrawMesh();
	
	cout<<endl<<"/////////////////////////////////////////////////////////////////////////"<<endl;	
	app->Run();
	return 0;
}	
